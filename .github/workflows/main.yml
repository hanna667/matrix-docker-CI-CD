name: Build, Scan, and Push Docker Image (Multi-Arch, Dockerfile Generated)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    outputs:
      images: ${{ steps.set_output.outputs.images }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          FROM node:20-alpine
          WORKDIR /app
          COPY package.json package-lock.json ./
          RUN npm ci
          COPY . .
          EXPOSE 8080
          CMD ["node", "index.js"]
          EOF

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Scout CVE Scan
        uses: docker/scout-action@v1
        with:
         command: cves
         image: ghcr.io/hanna667/docker-CICD:v1.0.0
         registry-user: hanna667
         registry-password: ${{ secrets.GHCR_PAT }}
         dockerhub-user: ${{ secrets.DOCKERHUB_USER }}
         dockerhub-password: ${{ secrets.DOCKERHUB_PASSWORD }}
         github-token: ${{ secrets.GITHUB_TOKEN }}
         summary: true
         write-comment: true
         format: json



      - name: Build Docker image for ${{ matrix.arch }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/${{ matrix.arch }}
          push: false
          tags: ghcr.io/matrix-node:${{ github.sha }}-${{ matrix.arch }}

      - name: Docker Scout Scan
        uses: docker/scout-action@v1
        with:
         command: cves
         image: ghcr.io/***/matrix-docker-CI-CD:4cc2148ad8c027f73b136de0b6934c514380c629-amd64
         dockerhub-user: ${{ secrets.DOCKERHUB_USER }}
         github-token: ${{ secrets.GITHUB_TOKEN }}
         summary: true
         format: json
         write-comment: true


      - name: Collect images for output
        id: set_output
        run: |
          echo "images=ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64,ghcr.io/${{ github.repository }}:${{ github.sha }}-arm64" >> $GITHUB_OUTPUT

  push-image:
    needs: build-scan
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate Dockerfile
        run: |
          cat > Dockerfile <<'EOF'
          FROM node:20-alpine
          WORKDIR /app
          COPY package.json package-lock.json ./
          RUN npm ci
          COPY . .
          EXPOSE 8080
          CMD ["node", "index.js"]
          EOF

      - name: Scan Docker image using Docker Scout
        uses: docker/scout-action@v1
        with:
          command: 'cves'
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
         context: .
         push: true
         tags: |
          ghcr.io/hanna667/docker-CICD:v1.0.0
          platforms: linux/amd64
